{"ast":null,"code":"import _classCallCheck from \"/Users/louiseserenhov/Desktop/kod-projekt/my-food-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/louiseserenhov/Desktop/kod-projekt/my-food-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/louiseserenhov/Desktop/kod-projekt/my-food-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/louiseserenhov/Desktop/kod-projekt/my-food-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/louiseserenhov/Desktop/kod-projekt/my-food-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/louiseserenhov/Desktop/kod-projekt/my-food-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/louiseserenhov/Desktop/kod-projekt/my-food-app/src/components/addrecipe.js\";\n//import the necessary files\nimport React from 'react';\nimport { Modal, ControlLabel, FormGroup, FormControl, Button } from 'react-bootstrap'; //create a class for displaying the modal for adding a new recipe and export it\n\nexport var AddRecipe =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddRecipe, _React$Component);\n\n  function AddRecipe(props) {\n    var _this;\n\n    _classCallCheck(this, AddRecipe);\n\n    //create a state to handle the new recipe\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddRecipe).call(this, props));\n    _this.state = {\n      name: \"\",\n      ingredients: \"\"\n    };\n    _this.handleRecipeNameChange = _this.handleRecipeNameChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleRecipeIngredientsChange = _this.handleRecipeIngredientsChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCancel = _this.handleCancel.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddRecipe, [{\n    key: \"handleRecipeNameChange\",\n    value: function handleRecipeNameChange(e) {\n      //change the name to reflect user input\n      this.setState({\n        name: e.target.value\n      });\n    }\n  }, {\n    key: \"handleRecipeIngredientsChange\",\n    value: function handleRecipeIngredientsChange(e) {\n      //change the ingredients to reflect user input\n      this.setState({\n        ingredients: e.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      //get the recipe data, manipulate it and call the function for creating a new recipe\n      e.preventDefault();\n      var onAdd = this.props.onAdd;\n      var regExp = /\\s*,\\s*/;\n      var newName = this.state.name;\n      var newIngredients = this.state.ingredients.split(regExp);\n      var newRecipe = {\n        name: newName,\n        ingredients: newIngredients\n      };\n      onAdd(newRecipe);\n      this.setState({\n        name: \"\",\n        ingredients: \"\"\n      });\n    }\n  }, {\n    key: \"handleCancel\",\n    value: function handleCancel() {\n      var onAddModal = this.props.onAddModal;\n      this.setState({\n        name: \"\",\n        ingredients: \"\"\n      });\n      onAddModal();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var onShow = this.props.onShow;\n      var regex1 = /^\\S/;\n      var regex2 = /^[^,\\s]/;\n      var regex3 = /[^,\\s]$/;\n      var validRecipe = regex1.test(this.state.name) && regex2.test(this.state.ingredients) && regex3.test(this.state.ingredients);\n      return React.createElement(Modal, {\n        show: onShow,\n        onHide: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"New Recipe\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"formControlsName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Recipe Name\"), React.createElement(FormControl, {\n        type: \"text\",\n        required: true,\n        onChange: this.handleRecipeNameChange,\n        value: this.state.name,\n        placeholder: \"Enter Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"formControlsIngredients\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Recipe Ingredients\"), React.createElement(FormControl, {\n        componentClass: \"textarea\",\n        type: \"text\",\n        required: true,\n        onChange: this.handleRecipeIngredientsChange,\n        value: this.state.ingredients,\n        placeholder: \"Enter Ingredients(separate by commas)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Button, {\n        disabled: !validRecipe,\n        bsStyle: \"success\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Save Recipe\")));\n    }\n  }]);\n\n  return AddRecipe;\n}(React.Component);\n;","map":{"version":3,"sources":["/Users/louiseserenhov/Desktop/kod-projekt/my-food-app/src/components/addrecipe.js"],"names":["React","Modal","ControlLabel","FormGroup","FormControl","Button","AddRecipe","props","state","name","ingredients","handleRecipeNameChange","bind","handleRecipeIngredientsChange","handleSubmit","handleCancel","e","setState","target","value","preventDefault","onAdd","regExp","newName","newIngredients","split","newRecipe","onAddModal","onShow","regex1","regex2","regex3","validRecipe","test","Component"],"mappings":"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","sourcesContent":["//import the necessary files\nimport React from 'react';\nimport {Modal,ControlLabel,FormGroup,FormControl,Button} from 'react-bootstrap';\n//create a class for displaying the modal for adding a new recipe and export it\nexport class AddRecipe extends React.Component {\n  constructor(props) {//create a state to handle the new recipe\n    super(props);\n    this.state = {name: \"\", ingredients: \"\"};\n    this.handleRecipeNameChange = this.handleRecipeNameChange.bind(this);\n    this.handleRecipeIngredientsChange = this.handleRecipeIngredientsChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n  handleRecipeNameChange(e) {//change the name to reflect user input\n    this.setState({name: e.target.value});\n  }\n  handleRecipeIngredientsChange(e) {//change the ingredients to reflect user input\n    this.setState({ingredients: e.target.value});\n  }\n  handleSubmit(e) {//get the recipe data, manipulate it and call the function for creating a new recipe\n    e.preventDefault();\n    const onAdd = this.props.onAdd;\n    const regExp = /\\s*,\\s*/;\n    var newName = this.state.name;\n    var newIngredients = this.state.ingredients.split(regExp);\n    var newRecipe = {name: newName, ingredients: newIngredients};\n    onAdd(newRecipe);\n    this.setState({name: \"\", ingredients: \"\"});\n  }\n  handleCancel() {\n    const onAddModal = this.props.onAddModal;\n    this.setState({name: \"\", ingredients: \"\"});\n    onAddModal();\n  }\n  render() {\n    const onShow = this.props.onShow;\n    var regex1 = /^\\S/;\n    var regex2 = /^[^,\\s]/;\n   var regex3 = /[^,\\s]$/;\n    const validRecipe = regex1.test(this.state.name) && regex2.test(this.state.ingredients) && regex3.test(this.state.ingredients);\n    return(\n      <Modal show={onShow} onHide={this.handleCancel}>\n        <Modal.Header closeButton>\n          <Modal.Title>New Recipe</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <FormGroup controlId=\"formControlsName\">\n            <ControlLabel>Recipe Name</ControlLabel>\n            <FormControl type=\"text\" required onChange={this.handleRecipeNameChange} value={this.state.name} placeholder=\"Enter Name\" />\n          </FormGroup>\n          <FormGroup controlId=\"formControlsIngredients\">\n            <ControlLabel>Recipe Ingredients</ControlLabel>\n            <FormControl componentClass=\"textarea\" type=\"text\" required onChange={this.handleRecipeIngredientsChange} value={this.state.ingredients} placeholder=\"Enter Ingredients(separate by commas)\" />\n          </FormGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button disabled={!validRecipe} bsStyle=\"success\" onClick={this.handleSubmit}>Save Recipe</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n};"]},"metadata":{},"sourceType":"module"}